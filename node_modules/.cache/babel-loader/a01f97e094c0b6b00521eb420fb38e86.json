{"ast":null,"code":"var _jsxFileName = \"/Users/prolificboss/Documents/GitHub/theta-video-platform/src/components/VideoCard.js\";\nimport React from 'react';\nimport { web3, contract } from '../blockchain';\nconst VideoCard = ({\n  video\n}) => {\n  const mintNFT = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.mintVideoNFT(video.url, video.metadata).send({\n        from: accounts[0]\n      });\n      console.log('NFT minted successfully');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, video.title), /*#__PURE__*/React.createElement(\"video\", {\n    src: video.url,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mintNFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Mint NFT\"));\n};\nexport default VideoCard;","map":{"version":3,"names":["React","web3","contract","VideoCard","video","mintNFT","accounts","eth","getAccounts","methods","mintVideoNFT","url","metadata","send","from","console","log","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","src","controls","onClick"],"sources":["/Users/prolificboss/Documents/GitHub/theta-video-platform/src/components/VideoCard.js"],"sourcesContent":["import React from 'react';\nimport { web3, contract } from '../blockchain';\n\nconst VideoCard = ({ video }) => {\n  const mintNFT = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await contract.methods.mintVideoNFT(video.url, video.metadata).send({ from: accounts[0] });\n      console.log('NFT minted successfully');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n    }\n  };\n\n  return (\n    <div className=\"video-card\">\n      <h2>{video.title}</h2>\n      <video src={video.url} controls />\n      <button onClick={mintNFT}>Mint NFT</button>\n    </div>\n  );\n};\n\nexport default VideoCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAE9C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC/B,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAG,CAACC,WAAW,CAAC,CAAC;MAC7C,MAAMN,QAAQ,CAACO,OAAO,CAACC,YAAY,CAACN,KAAK,CAACO,GAAG,EAAEP,KAAK,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAER,QAAQ,CAAC,CAAC;MAAE,CAAC,CAAC;MAC1FS,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEjB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzB,KAAA,CAAAkB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKrB,KAAK,CAACsB,KAAU,CAAC,eACtB1B,KAAA,CAAAkB,aAAA;IAAOS,GAAG,EAAEvB,KAAK,CAACO,GAAI;IAACiB,QAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAClCzB,KAAA,CAAAkB,aAAA;IAAQW,OAAO,EAAExB,OAAQ;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CACvC,CAAC;AAEV,CAAC;AAED,eAAetB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}